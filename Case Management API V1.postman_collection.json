{
	"info": {
		"_postman_id": "aea6c8e5-3448-4ae6-971d-d58643294183",
		"name": "Case Management API V1",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Application API",
			"item": [
				{
					"name": "Get Tenant Access Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (responseBody.has(\"access_token\")) {",
									"    var jsonData = JSON.parse(responseBody);",
									"    postman.setEnvironmentVariable(\"tenant_access_token\", jsonData.access_token);",
									"    console.log(postman.getEnvironmentVariable(\"tenant_access_token\"));",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{app_confclient_id}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{app_confclient_secret}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "{{tenant_svcacc_uid}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{tenant_svcacc_pwd}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "{{grant_type_pw}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{api_host}}/tenants/{{tenant_id}}/oauth2/token",
							"protocol": "https",
							"host": [
								"{{api_host}}"
							],
							"path": [
								"tenants",
								"{{tenant_id}}",
								"oauth2",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Case Definitions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Case Configs listed succesfully\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{case_admin_url}}/casetypes",
							"host": [
								"{{case_admin_url}}"
							],
							"path": [
								"casetypes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Case",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Case instance created succesfully\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"\r",
									"    const response = pm.response.json();\r",
									"    pm.environment.set(\"case_id\", response.id)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "caseInstance",
									"type": "file",
									"src": "caseinstance1.json"
								}
							]
						},
						"url": {
							"raw": "{{case_runtime_url}}/case-definitions/{{case_definition_id}}/cases",
							"host": [
								"{{case_runtime_url}}"
							],
							"path": [
								"case-definitions",
								"{{case_definition_id}}",
								"cases"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Case With Attachment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Case instance created succesfully\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"\r",
									"    const response = pm.response.json();\r",
									"    pm.environment.set(\"case_id\", response.id)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "multipart/form-data"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "caseInstance",
									"type": "file",
									"src": "caseinstance1.json"
								},
								{
									"key": "files",
									"type": "file",
									"src": "/C:/Users/huangz/Desktop/design.txt"
								}
							]
						},
						"url": {
							"raw": "{{case_runtime_url}}/case-definitions/{{case_definition_id}}/cases",
							"host": [
								"{{case_runtime_url}}"
							],
							"path": [
								"case-definitions",
								"{{case_definition_id}}",
								"cases"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Users",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Case Configs listed succesfully\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{case_runtime_url}}/users",
							"host": [
								"{{case_runtime_url}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				},
				{
					"name": "Assign Case",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Case assigned succesfully\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"action\": \"assign\",\r\n    \"caseAssignee\": {\r\n        \"id\": \"{{case_id}}\",\r\n        \"assignee\": {\r\n            \"id\": \"7b4ce2e3-4d3f-4f4a-824b-c0f72c2b3519\",\r\n            \"etsUuid\": \"5caf95c5-f168-420b-9a6d-fde5d71c3b48\",\r\n            \"caseIdentityType\": \"User\",\r\n            \"firstName\": \"Philip\",\r\n            \"lastName\": \"Bondoc\",\r\n            \"email\": \"pbondoc@opentext.com\"\r\n        }\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{case_runtime_url}}/case-definitions/{{case_definition_id}}/cases/{{case_id}}/case-action",
							"host": [
								"{{case_runtime_url}}"
							],
							"path": [
								"case-definitions",
								"{{case_definition_id}}",
								"cases",
								"{{case_id}}",
								"case-action"
							]
						}
					},
					"response": []
				},
				{
					"name": "Reassign Case",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Case reassigned succesfully\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"action\": \"assign\",\r\n    \"caseAssignee\": {\r\n        \"id\": \"{{case_id}}\",\r\n        \"assignee\": {\r\n            \"id\": \"7b4ce2e3-4d3f-4f4a-824b-c0f72c2b3519\",\r\n            \"etsUuid\": \"5caf95c5-f168-420b-9a6d-fde5d71c3b48\",\r\n            \"caseIdentityType\": \"User\",\r\n            \"firstName\": \"Philip\",\r\n            \"lastName\": \"Bondoc\",\r\n            \"email\": \"pbondoc@opentext.com\"\r\n        }\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{case_runtime_url}}/case-definitions/{{case_definition_id}}/cases/{{case_id}}/case-action",
							"host": [
								"{{case_runtime_url}}"
							],
							"path": [
								"case-definitions",
								"{{case_definition_id}}",
								"cases",
								"{{case_id}}",
								"case-action"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cancel Case",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Case canceled succesfully\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"action\": \"cancel\",\r\n    \"cancellationNotes\": \"your cancellation notes\"\r\n}"
						},
						"url": {
							"raw": "{{case_runtime_url}}/case-definitions/{{case_definition_id}}/cases/{{case_id}}/case-action",
							"host": [
								"{{case_runtime_url}}"
							],
							"path": [
								"case-definitions",
								"{{case_definition_id}}",
								"cases",
								"{{case_id}}",
								"case-action"
							]
						}
					},
					"response": []
				},
				{
					"name": "Resolve Case",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Case resolved succesfully\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"action\": \"resolve\",\r\n    \"resolutionStatus\": \"your resolution status\",\r\n    \"resolutionNotes\": \"your resolution notes\"\r\n}"
						},
						"url": {
							"raw": "{{case_runtime_url}}/case-definitions/{{case_definition_id}}/cases/{{case_id}}/case-action",
							"host": [
								"{{case_runtime_url}}"
							],
							"path": [
								"case-definitions",
								"{{case_definition_id}}",
								"cases",
								"{{case_id}}",
								"case-action"
							]
						}
					},
					"response": []
				},
				{
					"name": "Revoke Case",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Case revoked succesfully\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"action\": \"revoke\"\r\n}"
						},
						"url": {
							"raw": "{{case_runtime_url}}/case-definitions/{{case_definition_id}}/cases/{{case_id}}/case-action",
							"host": [
								"{{case_runtime_url}}"
							],
							"path": [
								"case-definitions",
								"{{case_definition_id}}",
								"cases",
								"{{case_id}}",
								"case-action"
							]
						}
					},
					"response": []
				},
				{
					"name": "Claim Case",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Case claimed succesfully\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"action\": \"claim\"\r\n}"
						},
						"url": {
							"raw": "{{case_runtime_url}}/case-definitions/{{case_definition_id}}/cases/{{case_id}}/case-action",
							"host": [
								"{{case_runtime_url}}"
							],
							"path": [
								"case-definitions",
								"{{case_definition_id}}",
								"cases",
								"{{case_id}}",
								"case-action"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Case",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": ""
						},
						"url": {
							"raw": "{{case_runtime_url}}/case-definitions/{{case_definition_id}}/cases/{{caseId}}",
							"host": [
								"{{case_runtime_url}}"
							],
							"path": [
								"case-definitions",
								"{{case_definition_id}}",
								"cases",
								"{{caseId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Case Details",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Case details retrieved succesfully\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{case_runtime_url}}/case-definitions/{{case_definition_id}}/cases/{{case_id}}/stages",
							"host": [
								"{{case_runtime_url}}"
							],
							"path": [
								"case-definitions",
								"{{case_definition_id}}",
								"cases",
								"{{case_id}}",
								"stages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Case Data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Case data updated succesfully\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"caseProperties\": {\r\n\t\t\"customAttributes\": {\r\n\t\t\t\"caseType\": {\r\n\t\t\t\t\"id\": \"{{case_definition_id}}\"\r\n\t\t\t},\r\n\t\t\t\"caseInstance\": {\r\n\t\t\t\t\"id\": \"{{case_id}}\",\r\n\t\t\t\t\"caseType\": {\r\n\t\t\t\t\t\"id\": \"{{case_definition_id}}\"\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t\t\"data\": {\r\n\t\t\t\t\"ca_category\": \"Hardware\"\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n} ",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{case_runtime_url}}/case-definitions/{{case_definition_id}}/cases/{{case_id}}/case-data",
							"host": [
								"{{case_runtime_url}}"
							],
							"path": [
								"case-definitions",
								"{{case_definition_id}}",
								"cases",
								"{{case_id}}",
								"case-data"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Input Forms",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Case input forms retrieved succesfully\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"body": {
							"mode": "formdata",
							"formdata": []
						},
						"url": {
							"raw": "{{case_runtime_url}}/case-definitions/{{case_definition_id}}/cases/{{case_id}}/input-forms",
							"host": [
								"{{case_runtime_url}}"
							],
							"path": [
								"case-definitions",
								"{{case_definition_id}}",
								"cases",
								"{{case_id}}",
								"input-forms"
							]
						}
					},
					"response": []
				},
				{
					"name": "List Cases",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Cases list retrieved succesfully\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{case_runtime_url}}/cases?includeProperties=true&filter=state:active&page=0&size=50&sort=caseId,asc",
							"host": [
								"{{case_runtime_url}}"
							],
							"path": [
								"cases"
							],
							"query": [
								{
									"key": "includeProperties",
									"value": "true"
								},
								{
									"key": "filter",
									"value": "state:active"
								},
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "50"
								},
								{
									"key": "sort",
									"value": "caseId,asc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List Requestor Cases",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Requestor cases list retrieved succesfully\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{case_runtime_url}}/cases?includeProperties=true&filter=creator:currentuser&page=0&size=50&sort=createdOn,desc",
							"host": [
								"{{case_runtime_url}}"
							],
							"path": [
								"cases"
							],
							"query": [
								{
									"key": "includeProperties",
									"value": "true"
								},
								{
									"key": "filter",
									"value": "creator:currentuser"
								},
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "50"
								},
								{
									"key": "sort",
									"value": "createdOn,desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "List User Cases",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"User cases list retrieved succesfully\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{case_runtime_url}}/user-cases?filter=Active&includeIcon=true",
							"host": [
								"{{case_runtime_url}}"
							],
							"path": [
								"user-cases"
							],
							"query": [
								{
									"key": "filter",
									"value": "Active"
								},
								{
									"key": "includeIcon",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Comment On Case",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Comment posted succesfully\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"\r",
									"    const response = pm.response.json();\r",
									"    pm.environment.set(\"comment_id\", response.id)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"caseInstanceId\": \"{{case_id}}\",\r\n  \"comments\": \"test comment 2\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{case_runtime_url}}/case-definitions/{{case_definition_id}}/cases/{{case_id}}/comments",
							"host": [
								"{{case_runtime_url}}"
							],
							"path": [
								"case-definitions",
								"{{case_definition_id}}",
								"cases",
								"{{case_id}}",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Comment List",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{case_runtime_url}}/case-definitions/{{case_definition_id}}/cases/{{case_id}}/comments",
							"host": [
								"{{case_runtime_url}}"
							],
							"path": [
								"case-definitions",
								"{{case_definition_id}}",
								"cases",
								"{{case_id}}",
								"comments"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete Comment",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Comment deleted succesfully\", () => {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{case_runtime_url}}/case-definitions/{{case_definition_id}}/cases/{{case_id}}/comments/{{comment_id}}",
							"host": [
								"{{case_runtime_url}}"
							],
							"path": [
								"case-definitions",
								"{{case_definition_id}}",
								"cases",
								"{{case_id}}",
								"comments",
								"{{comment_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Administration API",
			"item": [
				{
					"name": "Get Tenant Access Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (responseBody.has(\"access_token\")) {",
									"    var jsonData = JSON.parse(responseBody);",
									"    postman.setEnvironmentVariable(\"tenant_access_token\", jsonData.access_token);",
									"    console.log(postman.getEnvironmentVariable(\"tenant_access_token\"));",
									"}",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"auth": {
							"type": "basic",
							"basic": [
								{
									"key": "username",
									"value": "{{app_confclient_id}}",
									"type": "string"
								},
								{
									"key": "password",
									"value": "{{app_confclient_secret}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"name": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "urlencoded",
							"urlencoded": [
								{
									"key": "username",
									"value": "{{tenant_svcacc_uid}}",
									"type": "text"
								},
								{
									"key": "password",
									"value": "{{tenant_svcacc_pwd}}",
									"type": "text"
								},
								{
									"key": "grant_type",
									"value": "{{grant_type_pw}}",
									"type": "text"
								}
							]
						},
						"url": {
							"raw": "https://{{api_host}}/tenants/{{tenant_id}}/oauth2/token",
							"protocol": "https",
							"host": [
								"{{api_host}}"
							],
							"path": [
								"tenants",
								"{{tenant_id}}",
								"oauth2",
								"token"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Case Definitions",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Case definitions list retrieved succesfully\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{case_admin_url}}/casetypes",
							"host": [
								"{{case_admin_url}}"
							],
							"path": [
								"casetypes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Case Definition",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Case Definition created succesfully\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"    const response = pm.response.json();\r",
									"    pm.environment.set(\"case_definition_id\", response.id)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"pb test 4\",\r\n    \"description\": \"postman test 4\",\r\n    \"classification\": {\r\n        \"id\": \"ce2f6c88-1f47-46d9-b608-357458d12ae6\",\r\n        \"name\": \"Enterprise\"\r\n    },\r\n    \"status\": \"Unpublished\"\r\n}"
						},
						"url": {
							"raw": "{{case_admin_url}}/case-definitions",
							"host": [
								"{{case_admin_url}}"
							],
							"path": [
								"case-definitions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add Custom Attribute",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Custom attribute added succesfully\", () => {\r",
									"    pm.response.to.have.status(201);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"label\": \"Category\",\r\n    \"dataType\": \"String\",\r\n    \"inputType\": \"TextField\",\r\n    \"propertyId\": \"ca_category\",\r\n    \"caseProperty\": {\r\n        \"required\": \"\",\r\n        \"inputType\": \"TextField\"\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{case_admin_url}}/case-definitions/{{case_definition_id}}/custom-attributes",
							"host": [
								"{{case_admin_url}}"
							],
							"path": [
								"case-definitions",
								"{{case_definition_id}}",
								"custom-attributes"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Stage",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Stage created succesfully\", ()=> {\r",
									"    pm.response.to.have.status(201);\r",
									"    const response = pm.response.json();\r",
									"    pm.environment.set(\"stage_id\", response.id)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"name\": \"The First Stage\",\r\n    \"sequence\": 2,\r\n    \"onentry_status\": \"Active\",\r\n    \"deadline\": \"P5H10M\",\r\n    \"stagecompletionbehaviour\": {\r\n        \"stage_completion_type\": \"COMPLETE_MANUALLY\"\r\n    }\r\n}"
						},
						"url": {
							"raw": "{{case_admin_url}}/case-definitions/{{case_definition_id}}/stages",
							"host": [
								"{{case_admin_url}}"
							],
							"path": [
								"case-definitions",
								"{{case_definition_id}}",
								"stages"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Fill PR Detail Task",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Task created succesfully\", () => {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n\t\"taskDefinitionId\" : 3,\r\n\t\"name\" : \"Edit case properties Task 1\",\r\n\t\"sequence\" : 1\r\n}"
						},
						"url": {
							"raw": "{{case_admin_url}}/case-definitions/{{case_definition_id}}/stages/{{stage_id}}/tasks",
							"host": [
								"{{case_admin_url}}"
							],
							"path": [
								"case-definitions",
								"{{case_definition_id}}",
								"stages",
								"{{stage_id}}",
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update General Setting",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "formdata",
							"formdata": [
								{
									"key": "settings",
									"type": "file",
									"src": "caseTypeSettingDTO.json"
								}
							]
						},
						"url": {
							"raw": "{{case_admin_url}}/case-definitions/{{case_definition_id}}/general-settings",
							"host": [
								"{{case_admin_url}}"
							],
							"path": [
								"case-definitions",
								"{{case_definition_id}}",
								"general-settings"
							]
						}
					},
					"response": []
				},
				{
					"name": "Publish Case Definition",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Case successfully published\", ()=> {\r",
									"    pm.response.to.have.status(200);\r",
									"    const response = pm.response.json();\r",
									"    if (response.caseConfigId) {\r",
									"        pm.environment.set(\"case_config_id\", response.caseConfigId);\r",
									"        console.log(pm.environment.get(\"case_config_id\"))\r",
									"    }\r",
									"    else {\r",
									"        pm.environment.set(\"case_config_id\", \"\");\r",
									"        console.log(\"No config id set\")\r",
									"    }\r",
									"    if (response.caseTypeId) {\r",
									"        pm.environment.set(\"case_type_id\", response.caseTypeId);\r",
									"        console.log(pm.environment.get(\"case_type_id\"))\r",
									"    }\r",
									"    else {\r",
									"        pm.environment.set(\"case_type_id\", \"\");\r",
									"        console.log(\"No type id set\")\r",
									"    }\r",
									"})\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"caseType\":{\r\n        \"id\":\"{{case_definition_id}}\"\r\n    },\r\n    \"versionChangeType\":\"MajorChange\"\r\n}"
						},
						"url": {
							"raw": "{{case_admin_url}}/case-definitions/{{case_definition_id}}/publish-config",
							"host": [
								"{{case_admin_url}}"
							],
							"path": [
								"case-definitions",
								"{{case_definition_id}}",
								"publish-config"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{tenant_access_token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	]
}